# Ï∂úÏ≤ò: Ïπ¥Ïπ¥Ïò§ entertainment FE Í∏∞Ïà†Î∏îÎ°úÍ∑∏

name: Run lighthouse CI When Push
on: push
jobs:
  lhci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.NODE_VERSION }}

      - name: Install packages
        run: |
          yarn install && npm install -g @lhci/cli

      - name: Build
        run: |
          yarn build

      - name: Run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          lhci autorun || echo "Fail to Run Lighthouse CI!"

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const results = require('./lhci_reports/manifest.json');
            let comments = "";
            
            results.forEach((result, idx) => {
              const { summary, jsonPath } = result;

              const formatResult = (res) => Math.round(res * 100);
              Object.keys(summary).forEach(
                (key) => (summary[key] = formatResult(summary[key]))
              );
              const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");
              const comment = [
                `‚ö°Ô∏è Lighthouse report #${idx+1}`,
                `| Category | Score |`,
                `| --- | --- |`,
                `| ${score(summary.performance)} Performance | ${summary.performance} |`,
                `| ${score(summary.accessibility)} Accessibility | ${summary.accessibility} |`,
                `| ${score(summary["best-practices"])} Best practices | ${summary["best-practices"]} |`,
                `| ${score(summary.seo)} SEO | ${summary.seo} |`,
                `| ${score(summary.pwa)} PWA | ${summary.pwa} |`,
              ].join("\n");
              comments += comment + "\n";
            });
            core.setOutput('comments', comments)

      - name: comment PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.format_lighthouse_score.outputs.comments}}